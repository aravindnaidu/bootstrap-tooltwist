apply plugin: 'java'
apply plugin: 'eclipse'

group = 'com.tooltwist'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.7

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourceJar
}

//----------------------------------------------------------------------
// Gradle lacks the "provided" dependency so we'll have to add it.
// http://blog.codeaholics.org/2012/emulating-mavens-provided-scope-in-gradle/
configurations {
    provided
    published
}
sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}
//----------------------------------------------------------------------

repositories {
    maven {
        url RESOLVE_CONTEXTURL + RESOLVE_REPO
        credentials {
            username = "${ARTIFACTORY_USER}"
            password = "${ARTIFACTORY_PASSWORD}"
        }
    }
    ivy {
        url "file:/${localRepo}"
        layout "maven"
    }
    mavenCentral()
}

dependencies {
    /* ToolTwist Dependencies */
    compile 'com.tooltwist:ttWbd:8.3.3-SNAPSHOT'
    compile 'com.tooltwist:ttStd:8.3.2'
    compile 'com.tooltwist:ttsec-standaloneDesigner:8.3.2'
    
    /* ToolTwist Dependencies For Local
    compile 'com.tooltwist:tooltwist:8.3.1-20140404'
    compile 'com.tooltwist:ttStd:8.3.1-20140404'
    compile 'com.tooltwist:ttWbd:8.3.1-20140404'
    */
    
    provided 'javax:javaee-api:6.0'
    
    testCompile group: 'junit', name: 'junit', version: '4.8.2'
}

/**************************************************************************************************
 *
 *      Copy various resources into the jar file or into separate zip files.
 */
task copyWebContent(type: Copy) {
        from 'WebContent'
        into 'build/bootstrap-tooltwist-resources/WebContent'
}
task copyConfig(type: Copy) {
        from 'config'
        into 'build/bootstrap-tooltwist-resources/bootstrap-tooltwist/config'
}
task copyWidgets(type: Copy) {
        from 'widgets'
        into 'build/bootstrap-tooltwist-resources/bootstrap-tooltwist/widgets'
}
/*task copyLib(type: Copy) {
        from configurations.runtime
        into "build/bootstrap-tooltwist-resources/WebContent/WEB-INF/lib"
}*/
task zipResources(type: Zip) {
        from 'build/bootstrap-tooltwist-resources'
        classifier = 'bootstrap-tooltwist-resources'
}
processResources {
        processResources.dependsOn("copyWebContent")
        processResources.dependsOn("copyConfig")
        processResources.dependsOn("copyWidgets")
        //processResources.dependsOn("copyLib")
        processResources.dependsOn("zipResources")
}
